@startuml
title OpenWifiLocalizator - Class Diagram
 
'accessibilité
skinparam classAttributeIconSize 0
 
'pas d'ombre
skinparam shadowing false
 
'taille de l'image
skinparam dpi 100
 
'couleurs
skinparam class {
  BackgroundColor AliceBlue
  ArrowColor CornflowerBlue
  BorderColor CornflowerBlue
}
skinparam stereotypeCBackgroundColor OldLace
 
' Définition des class

class Graph {
  - _allPlan : ArrayList<Plan>
  + bestPath(NodeFrom, NodeTo) : ArrayList<Path>
  + whereAmI() : void
}

class Node {
  - _listPath : ArrayList<Path>
  - _listAlias : ArrayList<String>
  - _listWifi : ArrayList<Wifi>
  - _parentPlan : Plan
  - _x : float
  - _y : float
  - _name : String
  + Node(planParent, x, y, name, listWifi)
  + addAlias(alias) : void
  # addPath(newPath) : void
  + isNode(name) : boolean
  + haveAlias(alias) : boolean
  + getParentPlan() : Plan
  + getX() : float
  + getY() : float
  + getName() : String
  + getAlias() : ArrayList<String>
}
 
class Path {
  - _nodeOne : Node
  - _nodeTwo : Node
  - _distance : float
  + Path(nodeOne, nodeTwo, distance)
  + containsNode(node) boolean
  + getOppositeNode(node) : Node
  + getDistance() : float
}
 
class Plan {
  - _name : String
  - _listNode : ArrayList<Node>
  - _allBssWifi : ArrayList<String>
  + Plan(name, loadPlan)
  + Plan(name)
  + isName(name) : boolean
  + getNode(name) : Node
  + searchNode(name) : ArrayList<Node>
  + containsWifiBss(bss) : boolean
  + getListWifiBss() : ArrayList<String>
  - loadXMLPlan() : void
  - XMLLoadNodes(parser) : void
  - XMLLoadOneNode(parser) : void
  - XMLGetListWifi(parser) : ArrayList<Wifi>
  - XMLLoadEdges(parser) : void
  - XMLLoadSpecificEdges(parser, typeEdge) : void
  - XMLDebugParser(parser) : void
}

class Wifi {
  - _BSS : String
  - _min : float
  - _max : float
  - _avg : float
  + Wifi(Bss, value)
  + Wifi(Bss, max, min ,avg)
  + getBSS() : String
  
}

class Scanner {
  - _network : String
  - _accesPoints : HashMap
  - _r : Runtime
  - avg(ArrayList) : float
  - getData() : BufferedReader
  - parse(BufferedReader) : void
  + scan() : ArrayList<Wifi>
}

' Définition des liens
Node  *-  Path
Node  *-  Wifi
Node  -*  Path
Graph *- Plan
Plan  *-  Node
Wifi -- Scanner
@enduml
